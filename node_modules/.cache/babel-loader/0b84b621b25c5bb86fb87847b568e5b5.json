{"ast":null,"code":"import * as React from \"react\";\nimport firebase from \"firebase\";\n\nasync function getName(nameOfGerm) {\n  //find reference to the part of database containing germs\n  let con = firebase.database().ref(\"germs\"); //takes a slice of this data based upon the parameters (name) and only the first one\n\n  let snap = await con.orderByChild(\"name\").limitToFirst(1).equalTo(nameOfGerm).once('value'); //takes the value of that slice and return it\n\n  let germ = snap.val();\n  let index = Object.keys(germ)[0];\n  let finalGerm = germ[index];\n  return finalGerm;\n}\n\nexport { getName };","map":{"version":3,"sources":["C:/Users/rober/IdeaProjects/GermGang-BacterialID/src/Components/firebaseUtils.js"],"names":["React","firebase","getName","nameOfGerm","con","database","ref","snap","orderByChild","limitToFirst","equalTo","once","germ","val","index","Object","keys","finalGerm"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,eAAeC,OAAf,CAAuBC,UAAvB,EAAmC;AAE/B;AACA,MAAIC,GAAG,GAAGH,QAAQ,CAACI,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAAV,CAH+B,CAK/B;;AACA,MAAIC,IAAI,GAAG,MAAMH,GAAG,CAACI,YAAJ,CAAiB,MAAjB,EAAyBC,YAAzB,CAAsC,CAAtC,EAAyCC,OAAzC,CAAiDP,UAAjD,EAA6DQ,IAA7D,CAAkE,OAAlE,CAAjB,CAN+B,CAQ/B;;AACA,MAAIC,IAAI,GAAGL,IAAI,CAACM,GAAL,EAAX;AAEA,MAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkB,CAAlB,CAAZ;AAEA,MAAIK,SAAS,GAAGL,IAAI,CAACE,KAAD,CAApB;AAEA,SAAOG,SAAP;AAEH;;AACD,SAAQf,OAAR","sourcesContent":["import * as React from \"react\";\r\nimport firebase from \"firebase\";\r\n\r\nasync function getName(nameOfGerm) {\r\n\r\n    //find reference to the part of database containing germs\r\n    let con = firebase.database().ref(\"germs\");\r\n\r\n    //takes a slice of this data based upon the parameters (name) and only the first one\r\n    let snap = await con.orderByChild(\"name\").limitToFirst(1).equalTo(nameOfGerm).once('value');\r\n\r\n    //takes the value of that slice and return it\r\n    let germ = snap.val();\r\n\r\n    let index = Object.keys(germ)[0]\r\n\r\n    let finalGerm = germ[index]\r\n\r\n    return finalGerm;\r\n\r\n}\r\nexport {getName}"]},"metadata":{},"sourceType":"module"}