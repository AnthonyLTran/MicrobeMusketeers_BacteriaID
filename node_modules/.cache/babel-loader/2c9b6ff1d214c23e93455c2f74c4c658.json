{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\IdeaProjects\\\\GermGang-BacterialID\\\\src\\\\Components\\\\RoutingButtons.js\",\n    _s = $RefreshSig$();\n\n//clicking a button will take you to the next page\n// import console from 'console'\n//this function takes in a name and returns a firebase object of the germ\nimport { getName } from \"./firebaseUtils\";\nimport PersonTracker from \"./PersonTracker\";\nimport { useContext } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap'; // -props.button- is the name of the current germ button. -props.updateGerm- is a function to update the germ in the parent\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoutingButton = props => {\n  _s();\n\n  const {\n    buttonNameArray,\n    updateArray\n  } = useContext(PersonTracker); //cut the identifier off of the name so that it can be displayed properly\n\n  let modifiedName = props.button.slice(0, -4);\n\n  try {\n    //if clicked, load the new identifier name into the update function passed into this component. Passing anything to update will launch a rerender\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      onClick: async () => {\n        //gets the particular germNode object based upon the name of the node\n        let fullGerm = await getName(props.button); //if the array of buttons exists in the current loaded germNode, update the parent with a new node to the array\n\n        if (fullGerm.buttonList) {\n          //update the array with the new germ node if clicked\n          updateArray([...buttonNameArray, fullGerm]);\n        } else {\n          //otherwise, do nothing. In the future, add styling, take up the whole page with the answer, etc. Up to Robert!\n          return undefined;\n        }\n      },\n      children: [modifiedName, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  } catch (Exception) {\n    console.log(Exception);\n  }\n};\n\n_s(RoutingButton, \"JKf2SiZKBzlOg0TT+5vca5SjVsY=\");\n\n_c = RoutingButton;\nexport default RoutingButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoutingButton\");","map":{"version":3,"sources":["C:/Users/rober/IdeaProjects/GermGang-BacterialID/src/Components/RoutingButtons.js"],"names":["getName","PersonTracker","useContext","Button","RoutingButton","props","buttonNameArray","updateArray","modifiedName","button","slice","fullGerm","buttonList","undefined","Exception","console","log"],"mappings":";;;AAAA;AAEA;AAEA;AACA,SAAQA,OAAR,QAAsB,iBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,OAAO,sCAAP;AACA,SAAQC,MAAR,QAAqB,iBAArB,C,CAOA;;;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAM;AAACC,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,MAAiCL,UAAU,CAACD,aAAD,CAAjD,CAF6B,CAI7B;;AACA,MAAIO,YAAY,GAAGH,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAqB,CAAC,CAAtB,CAAnB;;AAGJ,MAAI;AAGA;AACA,wBAAO,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAG,WAAlB;AAA8B,MAAA,OAAO,EAAG,YAAY;AACvD;AACA,YAAIC,QAAQ,GAAG,MAAMX,OAAO,CAACK,KAAK,CAACI,MAAP,CAA5B,CAFuD,CAMvD;;AACA,YAAGE,QAAQ,CAACC,UAAZ,EAAwB;AAEpB;AACAL,UAAAA,WAAW,CAAC,CAAC,GAAGD,eAAJ,EAAqBK,QAArB,CAAD,CAAX;AAEH,SALD,MAMK;AAED;AACA,iBAAOE,SAAP;AACH;AAGJ,OApBM;AAAA,iBAsBFL,YAtBE;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAyBH,GA7BD,CA8BA,OAAOM,SAAP,EAAkB;AAEdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH;AACA,CA1CD;;GAAMV,a;;KAAAA,a;AA6CN,eAAeA,aAAf","sourcesContent":["//clicking a button will take you to the next page\r\n\r\n// import console from 'console'\r\n\r\n//this function takes in a name and returns a firebase object of the germ\r\nimport {getName} from \"./firebaseUtils\";\r\nimport PersonTracker from \"./PersonTracker\";\r\nimport {useContext} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Button} from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\n\r\n\r\n// -props.button- is the name of the current germ button. -props.updateGerm- is a function to update the germ in the parent\r\nconst RoutingButton = (props) => {\r\n\r\n    const {buttonNameArray, updateArray} = useContext(PersonTracker);\r\n\r\n    //cut the identifier off of the name so that it can be displayed properly\r\n    let modifiedName = props.button.slice(0,-4)\r\n\r\n\r\ntry {\r\n\r\n\r\n    //if clicked, load the new identifier name into the update function passed into this component. Passing anything to update will launch a rerender\r\n    return <Button variant = \"secondary\" onClick={ async () => {\r\n        //gets the particular germNode object based upon the name of the node\r\n        let fullGerm = await getName(props.button)\r\n\r\n\r\n\r\n        //if the array of buttons exists in the current loaded germNode, update the parent with a new node to the array\r\n        if(fullGerm.buttonList) {\r\n\r\n            //update the array with the new germ node if clicked\r\n            updateArray([...buttonNameArray, fullGerm])\r\n\r\n        }\r\n        else {\r\n\r\n            //otherwise, do nothing. In the future, add styling, take up the whole page with the answer, etc. Up to Robert!\r\n            return undefined\r\n        }\r\n\r\n\r\n    }}>\r\n\r\n        {modifiedName} </Button>\r\n\r\n\r\n}\r\ncatch (Exception) {\r\n\r\n    console.log(Exception)\r\n}\r\n}\r\n\r\n\r\nexport default RoutingButton"]},"metadata":{},"sourceType":"module"}