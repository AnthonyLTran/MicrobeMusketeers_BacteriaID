[{"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\index.js":"1","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\reportWebVitals.js":"2","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\firebase.js":"3","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\Header.js":"4","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\QuestionPage.js":"5","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\PersonTracker.js":"6","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\RoutingButtons.js":"7","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\firebaseUtils.js":"8","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\App.js":"9","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\Dashboard.js":"10","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\Login.js":"11","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\PrivateRoute.js":"12","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\ForgotPassword.js":"13","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\UpdateProfile.js":"14","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\contexts\\AuthContext.js":"15","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\AdminLogin.js":"16","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\AddForm.js":"17","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\FormHelper.js":"18"},{"size":632,"mtime":1619407430569,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1615493284544,"results":"21","hashOfConfig":"20"},{"size":498,"mtime":1619406441778,"results":"22","hashOfConfig":"20"},{"size":4453,"mtime":1619290929504,"results":"23","hashOfConfig":"20"},{"size":2239,"mtime":1619407330280,"results":"24","hashOfConfig":"20"},{"size":419,"mtime":1619023023097,"results":"25","hashOfConfig":"20"},{"size":1748,"mtime":1619407409286,"results":"26","hashOfConfig":"20"},{"size":3440,"mtime":1619405802271,"results":"27","hashOfConfig":"20"},{"size":34493,"mtime":1619407430580,"results":"28","hashOfConfig":"20"},{"size":1168,"mtime":1619291205946,"results":"29","hashOfConfig":"20"},{"size":2081,"mtime":1619291006574,"results":"30","hashOfConfig":"20"},{"size":428,"mtime":1618973985953,"results":"31","hashOfConfig":"20"},{"size":1710,"mtime":1618973985952,"results":"32","hashOfConfig":"20"},{"size":2685,"mtime":1618973985955,"results":"33","hashOfConfig":"20"},{"size":1342,"mtime":1618973985956,"results":"34","hashOfConfig":"20"},{"size":1254,"mtime":1619128075271,"results":"35","hashOfConfig":"20"},{"size":5732,"mtime":1619405802270,"results":"36","hashOfConfig":"20"},{"size":1313,"mtime":1619405802270,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"tzmfht",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\index.js",["78","79"],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\reportWebVitals.js",[],["80","81"],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\firebase.js",[],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\Header.js",["82","83","84","85","86","87","88","89","90","91"],"import React from 'react'\r\nimport PersonTracker from \"./PersonTracker\";\r\nimport {useContext} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {Button, Alert, Breadcrumb, Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Switch, Route ,Link, NavLink} from \"react-router-dom\"\r\nimport Login from \"./Login\"\r\nimport {getName} from \"./firebaseUtils\";\r\nimport RoutingButton from \"./RoutingButtons\";\r\n//you can make this dynamic and turn into something based on some outside factors. Ex: If I move past the first screen (more than one is the array), change the header to include the reset/logout\r\n\r\n//reset button\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    //button/node objects from the context that are being updated\r\n    const {buttonNameArray, updateArray} = useContext(PersonTracker)  //this is the information needed. The array of buttons names and the update array function\r\n\r\n    function goBack() {\r\n\r\n        if (buttonNameArray.length > 1) {\r\n\r\n            //create a copy\r\n            let newArray = [...buttonNameArray]\r\n\r\n            //remove the last thing from the copy\r\n            newArray.pop()\r\n\r\n            //update the global array with the copy\r\n            updateArray(newArray)\r\n\r\n            //test to make sure it fires\r\n            console.log(\"sliced\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function reset() {\r\n\r\n        if (buttonNameArray.length > 1) {\r\n\r\n            //create a copy\r\n            let newArray = [...buttonNameArray]\r\n\r\n            //remove the last thing from the copy\r\n            newArray.splice(1)\r\n\r\n            //update the global array with the copy\r\n            updateArray(newArray)\r\n\r\n            //test to make sure it fires\r\n            console.log(\"sliced and reset\")\r\n        }\r\n    }\r\n\r\n\r\n    return (<div>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand onClick={() => {                          //resets when you click the germgang icon\r\n                    reset();\r\n                }}>GermGang</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link onClick={() => {                          //back button for nav bar with on click\r\n                            reset();\r\n                        }}>Reset</Nav.Link>\r\n                        <Nav.Link onClick={() => {                          //back button for nav bar with on click\r\n                            goBack();\r\n                        }}>Back</Nav.Link>\r\n                        <NavDropdown title=\"Go to\" id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.2\">Aerobic Gram Positive Rods</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.1\">Aerobic Gram Positive Cocci</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.1\">Staphylococci ID</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.1\">Alpha or Gamma-Hemolytic\r\n                                Streptococci</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.1\">Beta-Hemolytic Streptococci</NavDropdown.Item>\r\n                            <NavDropdown.Divider/>\r\n                            <NavDropdown.Item href=\"#action/3.1\">Gram Negative Rods Non-Stool</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.1\">Gram Negative Rods Stool Pathogens</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.1\">Escherichia Coli</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.1\">GNR Stool Pathogens Lactose Positive</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.1\">GNR Stool Pathogens Lactose Negative</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.1\">Yersinia Pestis</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                    <Nav>\r\n                        <NavLink to=\"/login\" className=\"btn btn-secondary\">Sign in</NavLink>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n\r\n\r\n    //use the getname function here to get a germ object.\r\n\r\n}\r\n\r\nexport default Header","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\QuestionPage.js",["92","93","94","95","96"],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\PersonTracker.js",[],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\RoutingButtons.js",[],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\firebaseUtils.js",["97","98","99"],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\App.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\Dashboard.js",["114"],"import React, { useState } from \"react\"\r\nimport { Card, Button, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { Container } from \"react-bootstrap\"\r\n\r\n\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\")\r\n  const { currentUser, logout } = useAuth()\r\n  const history = useHistory()\r\n\r\n  async function handleLogout() {\r\n    setError(\"\")\r\n\r\n    try {\r\n      await logout()\r\n      history.push(\"/login\")\r\n    } catch {\r\n      setError(\"Failed to log out\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Admin Controls</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <strong>Email:</strong> {currentUser.email}\r\n          <Link to=\"/update-profile\" className=\"btn btn-secondary w-100 mt-3\">\r\n            Update Profile\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Button variant=\"link\" onClick={handleLogout}>\r\n          Log Out\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\Login.js",[],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\PrivateRoute.js",[],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\ForgotPassword.js",[],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\UpdateProfile.js",[],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\contexts\\AuthContext.js",[],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\AdminLogin.js",["115","116"],"import React from \"react\"\r\nimport { AuthProvider } from \"../contexts/AuthContext\"\r\nimport PrivateRoute from \"./PrivateRoute\"\r\nimport Dashboard from \"./Dashboard.js\"\r\nimport Login from \"./Login\"\r\nimport ForgotPassword from \"./ForgotPassword\"\r\nimport UpdateProfile from \"./UpdateProfile\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport App from \"../App\"\r\n\r\nexport default function AdminLogin() {\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n            <div className=\"w-100\">\r\n                <Router>\r\n                    <AuthProvider>\r\n                        <Switch>\r\n                            <Route exact path = \"/\" component ={App}/>\r\n                            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n                            <Route exact path=\"/login\" component={Login} />\r\n                            <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n                        </Switch>\r\n                    </AuthProvider>\r\n                </Router>\r\n            </div>\r\n    )\r\n}\r\n","C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\AddForm.js",["117"],"C:\\Users\\rober\\IdeaProjects\\GermGang-BacterialID\\src\\Components\\FormHelper.js",[],{"ruleId":"118","severity":1,"message":"119","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":11},{"ruleId":"118","severity":1,"message":"122","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":15},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"118","severity":1,"message":"127","line":5,"column":9,"nodeType":"120","messageId":"121","endLine":5,"endColumn":15},{"ruleId":"118","severity":1,"message":"128","line":5,"column":17,"nodeType":"120","messageId":"121","endLine":5,"endColumn":22},{"ruleId":"118","severity":1,"message":"129","line":5,"column":24,"nodeType":"120","messageId":"121","endLine":5,"endColumn":34},{"ruleId":"118","severity":1,"message":"130","line":6,"column":27,"nodeType":"120","messageId":"121","endLine":6,"endColumn":33},{"ruleId":"118","severity":1,"message":"131","line":6,"column":35,"nodeType":"120","messageId":"121","endLine":6,"endColumn":41},{"ruleId":"118","severity":1,"message":"132","line":6,"column":43,"nodeType":"120","messageId":"121","endLine":6,"endColumn":48},{"ruleId":"118","severity":1,"message":"133","line":6,"column":50,"nodeType":"120","messageId":"121","endLine":6,"endColumn":54},{"ruleId":"118","severity":1,"message":"134","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":13},{"ruleId":"118","severity":1,"message":"135","line":8,"column":9,"nodeType":"120","messageId":"121","endLine":8,"endColumn":16},{"ruleId":"118","severity":1,"message":"136","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":21},{"ruleId":"118","severity":1,"message":"137","line":5,"column":20,"nodeType":"120","messageId":"121","endLine":5,"endColumn":26},{"ruleId":"118","severity":1,"message":"138","line":7,"column":9,"nodeType":"120","messageId":"121","endLine":7,"endColumn":17},{"ruleId":"118","severity":1,"message":"139","line":10,"column":9,"nodeType":"120","messageId":"121","endLine":10,"endColumn":18},{"ruleId":"118","severity":1,"message":"127","line":11,"column":8,"nodeType":"120","messageId":"121","endLine":11,"endColumn":14},{"ruleId":"118","severity":1,"message":"140","line":21,"column":29,"nodeType":"120","messageId":"121","endLine":21,"endColumn":40},{"ruleId":"118","severity":1,"message":"141","line":1,"column":13,"nodeType":"120","messageId":"121","endLine":1,"endColumn":18},{"ruleId":"118","severity":1,"message":"142","line":43,"column":16,"nodeType":"120","messageId":"121","endLine":43,"endColumn":19},{"ruleId":"118","severity":1,"message":"143","line":55,"column":16,"nodeType":"120","messageId":"121","endLine":55,"endColumn":22},{"ruleId":"118","severity":1,"message":"144","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":17},{"ruleId":"118","severity":1,"message":"134","line":10,"column":8,"nodeType":"120","messageId":"121","endLine":10,"endColumn":13},{"ruleId":"118","severity":1,"message":"145","line":11,"column":8,"nodeType":"120","messageId":"121","endLine":11,"endColumn":20},{"ruleId":"118","severity":1,"message":"146","line":12,"column":8,"nodeType":"120","messageId":"121","endLine":12,"endColumn":22},{"ruleId":"118","severity":1,"message":"147","line":13,"column":8,"nodeType":"120","messageId":"121","endLine":13,"endColumn":21},{"ruleId":"118","severity":1,"message":"148","line":14,"column":10,"nodeType":"120","messageId":"121","endLine":14,"endColumn":19},{"ruleId":"118","severity":1,"message":"149","line":15,"column":10,"nodeType":"120","messageId":"121","endLine":15,"endColumn":22},{"ruleId":"118","severity":1,"message":"130","line":16,"column":27,"nodeType":"120","messageId":"121","endLine":16,"endColumn":33},{"ruleId":"118","severity":1,"message":"131","line":16,"column":35,"nodeType":"120","messageId":"121","endLine":16,"endColumn":41},{"ruleId":"118","severity":1,"message":"132","line":16,"column":43,"nodeType":"120","messageId":"121","endLine":16,"endColumn":48},{"ruleId":"118","severity":1,"message":"150","line":17,"column":8,"nodeType":"120","messageId":"121","endLine":17,"endColumn":18},{"ruleId":"118","severity":1,"message":"151","line":40,"column":11,"nodeType":"120","messageId":"121","endLine":40,"endColumn":16},{"ruleId":"118","severity":1,"message":"152","line":44,"column":9,"nodeType":"120","messageId":"121","endLine":44,"endColumn":28},{"ruleId":"118","severity":1,"message":"153","line":537,"column":9,"nodeType":"120","messageId":"121","endLine":537,"endColumn":24},{"ruleId":"118","severity":1,"message":"148","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":19},{"ruleId":"118","severity":1,"message":"148","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":19},{"ruleId":"118","severity":1,"message":"154","line":14,"column":20,"nodeType":"120","messageId":"121","endLine":14,"endColumn":32},{"ruleId":"118","severity":1,"message":"138","line":1,"column":9,"nodeType":"120","messageId":"121","endLine":1,"endColumn":17},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'AddForm' is defined but never used.","no-native-reassign",["155"],"no-negated-in-lhs",["156"],"'Button' is defined but never used.","'Alert' is defined but never used.","'Breadcrumb' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Login' is defined but never used.","'getName' is defined but never used.","'RoutingButton' is defined but never used.","'string' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'updateArray' is assigned a value but never used.","'React' is defined but never used.","'Add' is defined but never used.","'Delete' is defined but never used.","'Dashboard' is defined but never used.","'PrivateRoute' is defined but never used.","'ForgotPassword' is defined but never used.","'UpdateProfile' is defined but never used.","'Container' is defined but never used.","'AuthProvider' is defined but never used.","'AdminLogin' is defined but never used.","'germs' is assigned a value but never used.","'gramPositiveAerobic' is assigned a value but never used.","'gramNegativeMac' is assigned a value but never used.","'handleSubmit' is defined but never used.","no-global-assign","no-unsafe-negation"]